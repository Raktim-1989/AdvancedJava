package com.qa.graphql;

import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.equalTo;

import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import io.restassured.RestAssured;


public class GraphQlQueryTest {
	
	
	@Test
	public void getAllFilmsTest()
	{
		
		//https://swapi-graphql.netlify.app/.netlify/functions/index
		RestAssured.baseURI = "https://swapi-graphql.netlify.app";
		String query = "{\"query\":\"{\\n  allFilms\\n  {\\n    films\\n    {\\n      title\\n    }\\n  }\\n  \\n}\",\"operationName\":null}";
		
		given().log().all().contentType("application/json")
		.body(query).when().log().all().
		post("/.netlify/functions/index")
		.then().log().all()
		.assertThat().statusCode(200)
		.and()
		.body("data.allFilms.films[0].title", equalTo("A New Hope"));
		
		
	}
	
	
	@DataProvider
	public Object[][] getQueryData()
	{
		return new Object[][] {{"10"}};
	}
	
	
	@Test(dataProvider = "getQueryData")
	public void getAllUsersTestWithDataTest(String limit)
	{
		

		RestAssured.baseURI = "https://hasura.io";
		String query = "{\"query\":\"{\\n  users(limit:"+limit+") {\\n  id\\n    name\\n    }\\n}\\n\",\"variables\":null}";
		
		given().log().all().contentType("application/json")
		.header("Authorization" , "abc")
		.body(query).when().log().all().
		post("/learn/graphql")
		.then().log().all()
		.assertThat().statusCode(200)
		.and()
		.body("data.allFilms.films[0].title", equalTo("A New Hope"));
		
	}
	
	

	
	
}
